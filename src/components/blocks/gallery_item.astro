---
import { Picture, getImage } from "astro:assets";
import { getCachedImage } from "../../image_cache";

const { upload, css_class = "" } = Astro.props;

const url = await getCachedImage(upload);

const images = await import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/*.{webp,jpeg,jpg,png,gif}",
);

const dynamicImage = await getImage({
    src: images[url](),
    format: "webp",
    widths: [360, 540, 720, 1200, 1600, upload.width],
    sizes: `(max-width: 360px) 360px, (max-width: 540px) 540px, (max-width: 720px) 720px, (max-width: 1200px) 1200px, (max-width: 1600px) 1600px, ${upload.width}px`,
});

console.log(dynamicImage);
---

<a
    href={dynamicImage.src}
    data-pswp-width={upload.width}
    data-pswp-height={upload.height}
    data-pswp-srcset={dynamicImage.srcSet.attribute}
    target="_blank"
>
    <Picture
        src={images[url]()}
        class="opacity-0 transition-opacity duration-100 ease-out"
        onload="this.style.opacity = 1"
        widths={[360, 540, 720, 1200, 1600, upload.width]}
        sizes={`(max-width: 360px) 360px, (max-width: 540px) 540px, (max-width: 720px) 720px, (max-width: 1200px) 1200px, (max-width: 1600px) 1600px, ${upload.width}px`}
        inferSize
        alt={upload.alt || ""}
    />
</a>
