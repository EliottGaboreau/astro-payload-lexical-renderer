---
import { NodeFormat } from "../node_format";

const { node } = Astro.props;

console.log(node);

let text = node.text;

const is_bold = node.format & NodeFormat.IS_BOLD;
const is_italic = !is_bold && node.format & NodeFormat.IS_ITALIC;
const is_strikethrough =
    !is_italic && node.format & NodeFormat.IS_STRIKETHROUGH;
const is_underline = !is_strikethrough && node.format & NodeFormat.IS_UNDERLINE;
const is_subscript = !is_underline && node.format & NodeFormat.IS_SUBSCRIPT;
const is_superscript = !is_subscript && node.format & NodeFormat.IS_SUPERSCRIPT;
const is_unformated = ![
    is_bold,
    is_italic,
    is_strikethrough,
    is_underline,
    is_subscript,
    is_superscript,
].some(Boolean);
---

{
    Boolean(is_bold) && (
        <strong>
            <Astro.self
                node={{ ...node, format: node.format & ~NodeFormat.IS_BOLD }}
            />
        </strong>
    )
}
{
    Boolean(is_italic) && (
        <em>
            <Astro.self
                node={{ ...node, format: node.format & ~NodeFormat.IS_ITALIC }}
            />
        </em>
    )
}
{
    Boolean(is_strikethrough) && (
        <span class="line-through">
            <Astro.self
                node={{
                    ...node,
                    format: node.format & ~NodeFormat.IS_STRIKETHROUGH,
                }}
            />
        </span>
    )
}
{
    Boolean(is_underline) && (
        <span class="underline">
            <Astro.self
                node={{
                    ...node,
                    format: node.format & ~NodeFormat.IS_UNDERLINE,
                }}
            />
        </span>
    )
}
{
    Boolean(is_subscript) && (
        <sub>
            <Astro.self
                node={{
                    ...node,
                    format: node.format & ~NodeFormat.IS_SUBSCRIPT,
                }}
            />
        </sub>
    )
}
{
    Boolean(is_superscript) && (
        <sup>
            <Astro.self
                node={{
                    ...node,
                    format: node.format & ~NodeFormat.IS_SUPERSCRIPT,
                }}
            />
        </sup>
    )
}
{is_unformated && node.text}
